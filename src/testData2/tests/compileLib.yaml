#
# Tests for compiling libs and new types
#

---
name: "simple"
compileLib: |
  Foo: Dict
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "inherit"
---
name: "metaMarker"
compileLib: |
  Foo: Dict <bar>
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "inherit"
      bar: "sys::Marker"
---
name: "metaDoc"
compileLib: |
  // Foo doc
  Foo: Dict
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "sys::Str Foo doc"
---
name: "metaComplex"
compileLib: |
  // Foo doc
  Foo: Dict <bar, baz:"hi!">
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "sys::Str Foo doc"
      bar: "sys::Marker"
      baz: "sys::Str hi!"
---
name: "slotMarker"
compileLib: |
  Foo: Dict { bar }
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "inherit"
    slots:
      bar:
        type: "sys::Marker"
---
name: "slotWithMeta"
compileLib: |
  Foo: Dict {
    bar: Marker <baz>
    qux: Str <corge : "garply", waldo: Date "2023-03-05">
  }
verifyTypes:
  Foo:
    supertype: "sys::Dict"
    meta:
      doc: "inherit"
    slots:
      bar:
        type: "sys::Marker"
        meta:
          baz: "sys::Marker"
          doc: "inherit"
      qux:
        type: "sys::Str"
        meta:
          corge: "sys::Str garply"
          waldo: "sys::Date 2023-03-05"
          doc: "inherit"
---


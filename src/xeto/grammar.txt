//
// Copyright (c) 2022, Brian Frank
// Licensed under the Academic Free License version 3.0
//
// History:
//   2 Aug 2022  Brian Frank  Creation
//


Productions [#productions]
**************************

  <objs>             :=  [<obj> <endOfObj>]*
  <endOfObj>         :=  ( [","] <nl> ) | ","
  <obj>              :=  [<leadingDoc>] ( <markerOnly> | <named> | <unnamed> ) [<trailingDoc>]
  <markerOnly>       :=  <markerName>
  <named>            :=  <name> ":" <body>
  <unnamed>          :=  <body>
  <body>             :=  [<type>] [<meta>] [<childrenOrVal>]  // must have at least one of these productions
  <childrenOrVal>    :=  <children> | <val>
  <meta>             :=  "<" <objs> ">"
  <children>         :=  "{" <objs> "}"
  <val>              :=  double quoted string literal

  <type>             :=  <typeAnd> | <typeOr> | <typeMaybe> | <typeSimple>
  <typeAnd>          :=  <typeSimple> ("&" <typeSimple>)+
  <typeOr>           :=  <typeOrPart> ("|" <typeOrPart>)+
  <typeOrPart>       :=  <typeSimple> | <val>
  <typeMaybe>        :=  <typeSimple> "?"
  <typeSimple>       :=  <qname>

  <leadingDoc>       := (<lineComment>)*
  <trailingDoc>      := <lineComment>

  <qname>            :=  <name> ("." <name>)*
  <name>             :=  <alpha> (<nameRest>)*
  <markerName>       :=  <alphaLower> (<nameRest>)*
  <nameRest>         :=  alpha | digit | '_'
  <alpha>            :=  alphaLower | alphaUpper
  <alphaLower>       :=  'a' - 'z'
  <alphaUpper>       :=  'A' - 'Z'
  <digit>            :=  '0' - '9'

Legend [#legend]
****************
Legend for BNF Grammar:
  :=      is defined as
  <x>     non-terminal
  "x"     literal
  'x'     char literal
  [x]     optional
  (x)     grouping
  s-e     inclusive char range
  x*      zero or more times
  x+      one or more times
  x|x     or




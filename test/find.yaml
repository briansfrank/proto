#
# Find transducer
#

---
name: strOnList
test: compile src, find fits:predicate, verify pog:expect
predicate: sys.Str
src: |
  List {
    "A"
    Int "123"
    sys.Str "C"
    Date "2023-01-04"
    {}
  }
expect: |
  sys.List {
    sys.Str "A"
    sys.Str "C"
  }
---
name: strOnDict
test: compile src, find fits:predicate, verify pog:expect
predicate: sys.Str
src: |
  {
    a: "A"
    b: Int "123"
    c: sys.Str "C"
    d: Date "2023-01-04"
    e: {}
  }
expect: |
  sys.Dict {
    a: sys.Str "A"
    c: sys.Str "C"
  }
---
name: numbers
test: compile src, find fits:predicate, verify pog:expect
predicate: sys.Number
src: |
  List {
    "A"
    Int "123"
    sys.Str "C"
    Date "2023-01-04"
    {}
    Float "2.0"
    sys.Number "50kW"
  }
expect: |
  sys.List {
    sys.Int "123"
    sys.Float "2.0"
    sys.Number "50kW"
  }
---
name: strEquals
test: compile src, find fits:predicate, verify pog:expect
predicate: |
  Str <equals> "match"
src: |
  List {
    "A"
    Int "123"
    sys.Str "match"
    Date "2023-01-04"
    {}
    Float "2.0"
    Ref "match"
    sys.Number "50kW"
  }
expect: |
  sys.List {
    sys.Str "match"
  }
---
name: numberVal
test: compile src, find fits:predicate, verify pog:expect
predicate: |
  Number "123"
src: |
  List {
    "A"
    Str "123"
    Int "123"
    sys.Str "123"
    Float "123"
    Ref "123"
    Number "123"
  }
expect: |
  sys.List {
    sys.Int "123"
    sys.Float "123"
    sys.Number "123"
  }
---
name: dictMarker
test: compile src, find fits:predicate, verify pog:expect
predicate: |
  {meter}
src: |
  List {
    {dis:"A", boiler},
    {dis:"B", meter},
    {dis:"C", meter},
    {dis:"D", tank},
  }
expect: |
  sys.List {
    sys.Dict {
      dis: sys.Str "B"
      meter
    }
    sys.Dict {
      dis: sys.Str "C"
      meter
    }
  }
---
name: dictMarkers
test: compile src, find fits:predicate, verify pog:expect
predicate: |
  {elec, meter}
src: |
  List {
    {dis:"A", boiler},
    {dis:"B", meter},
    {dis:"C", elec, meter},
    {dis:"D", tank},
  }
expect: |
  sys.List {
    sys.Dict {
      dis: sys.Str "C"
      elec
      meter
    }
  }
---
name: dictEquals
test: compile src, find fits:predicate, verify pog:expect
predicate: |
  {dis:<equals>"D"}
src: |
  List {
    {dis:"A", boiler},
    {dis:"B", meter},
    {dis:"C", elec, meter},
    {dis:"D", tank},
  }
expect: |
  sys.List {
    sys.Dict {
      dis: sys.Str "D"
      tank
    }
  }
---





